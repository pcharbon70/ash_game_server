defmodule AshGameServer.Repo.Migrations.AddBaseTables do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:players, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)

      add(:inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:deleted_at, :utc_datetime_usec)
      add(:created_by_id, :uuid)
      add(:updated_by_id, :uuid)
      add(:username, :text, null: false)
      add(:display_name, :text, null: false)
      add(:status, :text, null: false, default: "offline")
      add(:level, :bigint, null: false, default: 1)
      add(:experience_points, :bigint, null: false, default: 0)
      add(:last_seen_at, :utc_datetime_usec)
      add(:stats, :map, null: false)
    end

    create(unique_index(:players, [:username], name: "players_unique_username_index"))

    create table(:game_sessions, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)

      add(:inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:deleted_at, :utc_datetime_usec)
      add(:created_by_id, :uuid)
      add(:updated_by_id, :uuid)
      add(:name, :text, null: false)
      add(:status, :text, null: false, default: "waiting")
      add(:game_type, :text, null: false, default: "standard")
      add(:max_players, :bigint, null: false, default: 4)
      add(:current_players, :bigint, null: false, default: 0)
      add(:config, :map, null: false)
      add(:started_at, :utc_datetime_usec)
      add(:ended_at, :utc_datetime_usec)
      add(:game_state, :map, null: false, default: %{})
      add(:metadata, :map, null: false, default: %{})
    end
  end

  def down do
    drop(table(:game_sessions))

    drop_if_exists(unique_index(:players, [:username], name: "players_unique_username_index"))

    drop(table(:players))
  end
end
